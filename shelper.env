# -*- mode: shell-script -*-
#
# Helper environment for writing shell scripts
#

#### Program parameters ########################################################

UTIL_NAME=$(basename $0)
UTIL_DIR=$(dirname `readlink -f $0`)


#### Print functions ###########################################################

info() {
    echo $@
}
out() {
    echo -en $@
}
outn() {
    out $@
    echo
}
err () {
    echo "Error: $@" >& 2
    exit 1
}
warn () {
    echo "Warning: $@" >& 2
}


#### Usage generation ##########################################################

shelper.usage_list() {
    local list_raw=$(declare -p "$1")
    eval "declare -A list="${list_raw#*=}

    local max_key_length=0
    for key in "${!list[@]}"; do
        [ "${#key}" -gt "$max_key_length" ] && max_key_length="${#key}"
    done

    local padding=$((max_key_length + 8))
    for key in "${!list[@]}"; do
        printf "  %-${padding}s" "$key"
        echo ${list[$key]}
    done
}

shelper.completion_report() {
    [ -n "$_SHELPER_COMP" ] || return

    local list_raw=$(declare -p "$1" 2> /dev/null)
    [ -n "$list_raw" ] || exit
    eval "declare -A list="${list_raw#*=}

    for key in "${!list[@]}"; do
        echo -n " "
        echo -n "$key" | sed 's/ .*//'

        local val="${list[$key]}"
        [ -n "$val" ] && echo -n "\:\"$val\""
    done
    echo -n " "

    exit
}

shelper.completion_gen_mode() {
    [ -n "$_SHELPER_COMP" ]
}

shelper.group_exec() {
    local state_file=$1
    local delay_s=$2
    [ -n "$state_file" ] || err "no state specified"
    [ -n "$delay_s" ] || err "no delay specified"

    local shall_wait
    [ -f "$state_file" ] || shall_wait=y
    touch "$state_file"
    [ -n "$shall_wait" ] || exit

    while true; do
        local now=$(date +%s)
        local start=$(date -r $state_file +%s)
        local end=$((start + delay_s))
        [ $now -ge $end ] && break
        sleep 1
    done
    rm -f "$state_file"
}
